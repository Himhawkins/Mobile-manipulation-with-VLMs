[
  {
    "name": "exec_robot_create_thread",
    "description": "Spawns a background controller thread for the given robot_id. This thread reads from Targets/paths.json and Data/robot_pos.txt, and writes commands to Data/command.json. A separate process is expected to read command.json and control the hardware. Returns one of: \"Selected ID doesn't exist\", \"Path for specific robot doesn't exist. Generate path first\", \"Thread already running for robot <id>\", or \"Started controller thread for robot <id>\".",
    "parameters": {
      "type": "OBJECT",
      "properties": {
        "robot_id": {
          "type": "INTEGER",
          "description": "Robot ID (must appear in Data/robot_pos.txt). Example: 782."
        },
        "robot_padding": {
          "type": "INTEGER",
          "description": "Pixels to treat OTHER robots as circular obstacles during planning. Default: 30."
        }
      },
      "required": [
        "robot_id"
      ]
    }
  },
  {
    "name": "stop_robot_thread",
    "description": "Signals the running controller thread for the given robot_id to stop and waits briefly. Returns one of: \"No running thread for robot <id>\", \"Stop requested; robot <id> is still stopping\", or \"Stopped thread for robot <id>\".",
    "parameters": {
      "type": "OBJECT",
      "properties": {
        "robot_id": {
          "type": "INTEGER",
          "description": "Robot ID whose controller thread should be stopped."
        },
        "join_timeout": {
          "type": "NUMBER",
          "description": "Seconds to wait for the thread to join after signaling stop. Default: 5.0."
        }
      },
      "required": [
        "robot_id"
      ]
    }
  }
]