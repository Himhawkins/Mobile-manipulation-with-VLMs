[
   {
    "name": "generate_circle_pattern",
    "description": "Generate points for a circle of a given radius and number of points. If grid_size is not provided, the center defaults to the grid midpoint.\n\nOutput: A list of (x, y) coordinate points on the circle.\n\nExample: `generate_circle_pattern(radius=100.0, num_points=60)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "radius": {
       "type": "NUMBER",
       "description": "Radius of the circle."
      },
      "num_points": {
       "type": "INTEGER",
       "description": "The total number of points to generate on the circle's circumference."
      },
      "center": {
       "type": "ARRAY",
       "description": "Optional [x, y] coordinates for the circle's center. Defaults to the grid midpoint.",
       "items": {
        "type": "NUMBER"
       }
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid, used if the center is not specified.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "radius"
     ]
    }
   },
   {
    "name": "generate_rectangle_pattern",
    "description": "Generate points along the perimeter of a rectangle.\n\nOutput: A list of (x, y) coordinate points along the rectangle's edges.\n\nExample: `generate_rectangle_pattern(width_rect=200.0, height_rect=100.0, num_points_per_side=12)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "width_rect": {
       "type": "NUMBER",
       "description": "The total width of the rectangle."
      },
      "height_rect": {
       "type": "NUMBER",
       "description": "The total height of the rectangle."
      },
      "num_points_per_side": {
       "type": "INTEGER",
       "description": "The number of points to generate on each side of the rectangle."
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "width_rect",
      "height_rect",
      "num_points_per_side"
     ]
    }
   },
   {
    "name": "generate_trapezium_pattern",
    "description": "Generate points around a symmetric trapezium.\n\nOutput: A list of (x, y) coordinate points around the trapezium's edges.\n\nExample: `generate_trapezium_pattern(top_width=80.0, bottom_width=120.0, height=50.0, num_points_per_side=10)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "top_width": {
       "type": "NUMBER",
       "description": "The width of the top base of the trapezium."
      },
      "bottom_width": {
       "type": "NUMBER",
       "description": "The width of the bottom base of the trapezium."
      },
      "height": {
       "type": "NUMBER",
       "description": "The height of the trapezium."
      },
      "num_points_per_side": {
       "type": "INTEGER",
       "description": "The number of points to generate on each of the four sides."
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "top_width",
      "bottom_width",
      "height",
      "num_points_per_side"
     ]
    }
   },
   {
    "name": "generate_parallelogram_pattern",
    "description": "Generate points around a parallelogram.\n\nOutput: A list of (x, y) coordinate points around the parallelogram's edges.\n\nExample: `generate_parallelogram_pattern(width_para=150.0, height_para=75.0, angle=0.52, num_points_per_side=15)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "width_para": {
       "type": "NUMBER",
       "description": "The length of the base of the parallelogram."
      },
      "height_para": {
       "type": "NUMBER",
       "description": "The height of the parallelogram."
      },
      "angle": {
       "type": "NUMBER",
       "description": "The shear angle in radians."
      },
      "num_points_per_side": {
       "type": "INTEGER",
       "description": "The number of points to generate on each side."
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "width_para",
      "height_para",
      "angle",
      "num_points_per_side"
     ]
    }
   },
   {
    "name": "generate_diamond_pattern",
    "description": "Generate points around a diamond (rhombus).\n\nOutput: A list of (x, y) coordinate points around the diamond's edges.\n\nExample: `generate_diamond_pattern(width=100.0, height=100.0, num_points_per_side=10)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "width": {
       "type": "NUMBER",
       "description": "The total width of the diamond."
      },
      "height": {
       "type": "NUMBER",
       "description": "The total height of the diamond."
      },
      "num_points_per_side": {
       "type": "INTEGER",
       "description": "The number of points to generate on each of the four sides."
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "width",
      "height",
      "num_points_per_side"
     ]
    }
   },
   {
    "name": "generate_lawnmower_pattern",
    "description": "Generate a back-and-forth lawnmower coverage pattern within a rectangular area.\n\nOutput: A list of (x, y, heading) tuples for the path.\n\nExample: `generate_lawnmower_pattern(width_area=300.0, height_area=200.0, spacing=20.0)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "width_area": {
       "type": "NUMBER",
       "description": "The width of the area to cover."
      },
      "height_area": {
       "type": "NUMBER",
       "description": "The height of the area to cover."
      },
      "spacing": {
       "type": "NUMBER",
       "description": "The spacing between each parallel pass."
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "width_area",
      "height_area",
      "spacing"
     ]
    }
   },
   {
    "name": "generate_zigzag_pattern",
    "description": "Generate a zigzag line pattern within a bounding box.\n\nOutput: A list of (x, y) coordinate points in zigzag order.\n\nExample: `generate_zigzag_pattern(width_area=250.0, height_area=150.0, num_zigs=8)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "width_area": {
       "type": "NUMBER",
       "description": "The width of the bounding box for the pattern."
      },
      "height_area": {
       "type": "NUMBER",
       "description": "The height of the bounding box for the pattern."
      },
      "num_zigs": {
       "type": "INTEGER",
       "description": "The number of individual 'zig' segments in the pattern."
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "width_area",
      "height_area",
      "num_zigs"
     ]
    }
   },
   {
    "name": "generate_spiral_pattern",
    "description": "Generate an Archimedean spiral pattern.\n\nOutput: A list of (x, y) coordinate points along the spiral.\n\nExample: `generate_spiral_pattern(turns=4.0, max_radius=120.0, num_points=300)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "turns": {
       "type": "NUMBER",
       "description": "The total number of full rotations in the spiral."
      },
      "max_radius": {
       "type": "NUMBER",
       "description": "The maximum radius the spiral will reach."
      },
      "num_points": {
       "type": "INTEGER",
       "description": "The total number of points to generate along the entire spiral path."
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "turns",
      "max_radius",
      "num_points"
     ]
    }
   },
   {
    "name": "generate_ellipse_pattern",
    "description": "Generate points for an ellipse.\n\nOutput: A list of (x, y) coordinate points around the ellipse.\n\nExample: `generate_ellipse_pattern(major_axis=200.0, minor_axis=100.0, num_points=70)`",
    "parameters": {
     "type": "OBJECT",
     "properties": {
      "major_axis": {
       "type": "NUMBER",
       "description": "The length of the ellipse's major axis."
      },
      "minor_axis": {
       "type": "NUMBER",
       "description": "The length of the ellipse's minor axis."
      },
      "num_points": {
       "type": "INTEGER",
       "description": "The number of points to generate around the ellipse."
      },
      "grid_size": {
       "type": "ARRAY",
       "description": "Optional [width, height] of the grid.",
       "items": {
        "type": "INTEGER"
       }
      }
     },
     "required": [
      "major_axis",
      "minor_axis",
      "num_points"
     ]
    }
   }
  ]